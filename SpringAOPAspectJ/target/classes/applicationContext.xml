<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"> <!-- bean definitions here -->

    <!-- 引入注解驱动 -->
    <context:component-scan base-package="com.hand"/>

    <!-- 顾问 -->
    <bean id="myAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice" ref="myMethodAdvice"/>
        <property name="mappedName" value="service01"/>
    </bean>

    <bean id="serviceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!-- 代理目标 -->
        <property name="target" ref="userService"/>
        <!-- 目标类的实现接口 -->
        <property name="interfaces" value="com.hand.service.IUserService"/>
        <!-- 织入前置通知方法 -->
        <!--<property name="interceptorNames" value="myMethodAdvice"/>-->
        <!-- 织入环绕通知方法 -->
        <property name="interceptorNames" value="myMethodInterceptor"/>

    </bean>
    <!-- 顾问代理对象 -->
    <!--<bean id="serviceAdvisorProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userService"/>
        <property name="interfaces" value="com.hand.service.IUserService"/>
        <property name="interceptorNames" value="myAdvisor"/>
    </bean>-->

    <!-- 自动代理生成器 -->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
        &lt;!&ndash;<property name="beanName" value="userService"/>
        <property name="interceptorNames" value="myAdvisor"/>&ndash;&gt;
    </bean>-->

</beans>