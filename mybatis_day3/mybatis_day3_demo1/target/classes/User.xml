<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace:命名空间，对statement的信息进行分类管理-->
<!-- 注意：在mapper代理时，他具有特殊及重要的作用-->
<mapper namespace="test">
    <!--根据用户id查询用户信息-->
    <!-- select表示一个MappedStatement -->
    <!-- #{}表示一个占位符 -->
    <!-- #{id}:里面的id表示输入参数的参数名称,如果该参数是简单类型，那么#{}里面的参数类型可以任意 -->
    <!-- parameterType：表示输入参数的java类型 -->
    <!-- resultType:表示输出结果所映射的java类型 -->
    <select id="selectUserById" parameterType="java.lang.Integer" resultType="com.domain.User">
        select * from user where id=#{id}
    </select>

    <!-- 根据名字模糊查询
         1.使用#{},拼接成为parameterType的类型，也就是字符串，带“name”
     -->
    <select id="selectUsersByName" parameterType="java.lang.String" resultType="User">
        select * from user where username like #{name}
    </select>

    <!--
        2.使用${}，拼接成为一个sql片段,可能会有sql注入的风险
            使用${value},若parameterType是简单类型,里面的参数只能是value
     -->
    <select id="selectUsersByName2" parameterType="String" resultType="User">
        select * from user where username like ${value}
    </select>
    
    <!-- 添加用户 -->
    <insert id="addUser" parameterType="User">
        insert into user(username,birthday,sex,address,manage_id) values(#{username},#{birthday},#{sex},#{address},#{manage_id})
    </insert>
    <sql id="userFields">username,birthday,sex,address,manage_id</sql>
    <sql id="userValues">#{username},#{birthday},#{sex},#{address},#{manage_id}</sql>
    <!-- 查询主键返回到parameter中 -->
    <insert id="addUser2" parameterType="User">
        <!-- 查询主键，order指定查询主键和insert语句的先后顺序
                mysql：中的自增主键，要在添加了记录之后，才生成，所以需要order为AFTER，
                    配合着：last_insert_id()必须配合insert标签一起使用
                Oracle：中的自增主键是通过序列来实现的，所以需要order为Before
                    配合着：user_s.nextval from dual来使用
                select UUID() 也是order为Before就生成好了的
        -->
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into user(<include refid="userFields"/>) values(<include refid="userValues"/>)
    </insert>
</mapper>
