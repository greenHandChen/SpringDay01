<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
        <!--引入外部文件-->
        <context:property-placeholder location="jdbc.properties"/>
        <!--配置连接池-->
        <bean id="hikariDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
            <property name="driverClassName" value="${jdbc.driverClass}"/>
            <property name="jdbcUrl" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
        </bean>
        <!--配置业务类-->
        <bean id="accountService" class="com.hand.service.AccountServiceImpl02">
            <property name="accountDao" ref="accountDao"/>
        </bean>
        <!--配置Dao类-->
        <bean id="accountDao" class="com.hand.dao.AccountDaoImpl">
            <property name="dataSource" ref="hikariDataSource"/>
        </bean>
        <!--配置事务管理器-->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="hikariDataSource"/>
        </bean>
        <!--配置业务类的代理-->
        <bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
            <!--代理对象-->
            <property name="target" ref="accountService"/>
            <!--注入事务管理器-->
            <property name="transactionManager" ref="transactionManager"/>
            <!--注入事务属性-->
            <property name="transactionAttributes">
                <props>
                    <!--
                        key = "*" || key = "insert*" || key = "update*" || key="transfer"
                        PROPAGATION : 事务的传播行为
                        ISOLATION : 事务的隔离级别
                        readOnly : 只读(不可以进行修改，删除，插入)
                        -Exception ：发生异常回滚事务
                        +Exception : 发生异常不回滚事务

                        <prop key="transfer">PROPAGATION_REQUIRED</prop>
                        <prop key="transfer">PROPAGATION_REQUIRED,ISOLATION</prop>
                        <prop key="transfer">PROPAGATION_REQUIRED,readOnly</prop>
                        <prop key="transfer">PROPAGATION_REQUIRED,+java.lang.ArithmeticException</prop>
                    -->
                    <prop key="transfer">PROPAGATION_REQUIRED,-java.lang.ArithmeticException</prop>
                </props>
            </property>
        </bean>
</beans>