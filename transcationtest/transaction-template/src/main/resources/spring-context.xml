<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.2.xsd"
       default-autowire="byName" default-lazy-init="false">
    <context:annotation-config/>

    <!--<context:component-scan base-package="com.yonye.spring.transcation.template"/>-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--配置数据源-->
    <bean id="dataSource"
          class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxIdle" value="5" />
    </bean>

    <!--<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->
    <bean id="accountDaoImpl" class="com.yonye.spring.transcation.template.facade.AccountDaoImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--1、事务管理器-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 2、配置事务模板，注入事务管理器-->
    <!--<bean id="txTemplate" class="org.springframework.transaction.support.TransactionTemplate">-->
        <!--<property name="transactionManager" ref="txManager"/>-->
    <!--</bean>-->







<!--xml式事务管理-->
    <bean id="accountServiceTran" class="com.yonye.spring.transcation.template.serverImpl.AccountTranImpl">
        <property name="accountDao" ref="accountDaoImpl"/>
    </bean>
    <!--配置事务代理工厂-->
    <bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
       <!--事务管理器-->
        <property name="transactionManager" ref="txManager"/>
        <!-- 配置目标类-->
        <property name="target" ref="accountServiceTran"/>
        <!--配置目标类的接口-->
        <property name="proxyInterfaces" value="com.yonye.spring.transcation.template.server.IAccountService"/>
        <!--配置那些方法需要事务控制以及如何控制
        prop配置格式：PROPAGATION,ISOLATION,READONLY,-Exception，+Exception
        1、PROPAGATION:传播行为
        2、ISOLATION：隔离级别
        3、readOnly：是否只读
        4、-Exception：指定异常回滚
        5、+Exception：指定异常提交

        -->
        <property name="transactionAttributes">
            <props>
                <prop key="transfer">PROPAGATION_REQUIRED,ISOLATION_DEFAULT</prop>
            </props>
        </property>
    </bean>



    <!--aop配置事务基于注解-->
    <tx:annotation-driven proxy-target-class="true" transaction-manager="txManager"/>

</beans>