<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.hand"/>

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <tx:annotation-driven proxy-target-class="true" transaction-manager="txManager"/>

    <!-- 配置jdbc模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 1 dao -->
    <bean id="accountDao" class="com.hand.UserDaoImpl.AccountDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"></property>
    </bean>

    <!-- 2 servcie -->
    <bean id="accountService" class="com.hand.UserServiceImpl.AccountServiceImpl">
        <property name="iAccountDao" ref="accountDao"></property>
    </bean>

    <!-- 事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--配置事务模板，注入事务管理器-->
    <bean id="txTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="txManager"/>
    </bean>
    <!--配置事务代理工厂-->
    <bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <!--事务管理器-->
        <property name="transactionManager" ref="txManager"/>
        <!--配置目标类-->
        <property name="target" ref="accountService"/>
        <!--配置目标类的接口-->
        <property name="proxyInterfaces" value="com.hand.UserService.IAccountService"/>
        <!--参数需要使用<props>进行配置
            格式：PROPAGATION,ISOLATION,readOnly,-Exception,+Exception
            PROPAGATION 传播行为
            ISOLATION 隔离级别
            readOnly : 只读事务，不能进行修改操作
            -Exception : 发生这些异常回滚事务
            +Exception : 发生这些异常仍然提交事务
         -->
        <property name="transactionAttributes">
            <props>
                <prop key="transfer">PROPAGATION_REQUIRED,ISOLATION_DEFAULT</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="jdbcUrl" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>
</beans>